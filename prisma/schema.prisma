// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Store {
  id   Int    @id @default(autoincrement())
  name String
  link String
}

model Brand {
  id          Int       @id @default(autoincrement())
  description String?
  logo        String?
  name        String
  products    Product[]
  website     String?
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String
  SubCategories SubCategory[]
}

model SubCategory {
  id         Int      @id @default(autoincrement())
  name       String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model Profile {
  id           String    @id @default(uuid())
  clerkId      String    @unique
  firstName    String
  lastName     String
  username     String
  email        String
  profileImage String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  products     Product[]
}

model Product {
  id            String   @id @default(uuid())
  brand         Brand    @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId       Int
  category      String
  condition     String
  createdAt     DateTime @default(now())
  description   String
  gender        String
  image         String
  images        String[]
  name          String
  origPrice     Int
  purchasePrice Int?
  price         Int
  profile       Profile  @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId     String
  size          String
  source        String
  updatedAt     DateTime @updatedAt
}
